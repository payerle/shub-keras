
################################################################################
################################################################################
##                                                                            ##
##   This file is automatically generated and should not be edited here.      ##
##   Instead edit the source template files in                                ##
##   /cell_root/project/glue/s/singularity/bootstrap/templates    ##
##                                                                            ##
################################################################################
################################################################################
#
#UMD/Glue Singularity bootstrap definition file: keras-2.0.8_python-2_nocuda_tensorflow-1.3.0_theano-0.9.0
# Keras version 2.0.8 (TensorFlow=1.3.0, Theano=0.9.0, CNTK=none, Python 2.x, w/out cuda)
# 
# Keras: Version 2.0.8 (no cuda)
# Built for container
# OS: Ubuntu xenial
# Python: Major version 2
# with
# Tensorflow: 1.3.0
# Theano: 0.9.0
# CNTK: none



BootStrap: debootstrap
OSVersion: xenial
MirrorURL: http://us.archive.ubuntu.com/ubuntu

%runscript
    #This is what happens when you run the container


    #--- keras_generic
    #Run our python (which includes keras module)
    exec /usr/bin/python "$@"


%setup
    #This runs before %post, from _outside_ the container

    #--------	From bstrap_def_common

    #--- DEPRECATED: After Singularity 2.3.1, use labels instead
    #--- Create/populate singularity-image-info 
    # mkdirhier /etc/glue/singularity-image-info (underneath ${SINGULARITY_ROOTFS})
    if [ ! -d ${SINGULARITY_ROOTFS}/etc ]; then
	mkdir ${SINGULARITY_ROOTFS}/etc
	chown root:root ${SINGULARITY_ROOTFS}/etc
	chmod 755 ${SINGULARITY_ROOTFS}/etc
    fi
    if [ ! -d ${SINGULARITY_ROOTFS}/etc/glue ]; then
	mkdir ${SINGULARITY_ROOTFS}/etc/glue
	chown root:root ${SINGULARITY_ROOTFS}/etc/glue
	chmod 755 ${SINGULARITY_ROOTFS}/etc/glue
    fi
    if [ ! -d ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info ]; then
	mkdir ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info
	chown root:root ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info
	chmod 755 ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info
    fi

    #Save bootstrap definition
    cp /cell_root/project/glue/k/keras/bootstrap/definitions/keras-2.0.8_python-2_nocuda_tensorflow-1.3.0_theano-0.9.0.def ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info
    chown root:root ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/keras-2.0.8_python-2_nocuda_tensorflow-1.3.0_theano-0.9.0.def
    chmod  644 ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/keras-2.0.8_python-2_nocuda_tensorflow-1.3.0_theano-0.9.0.def
    ln -s keras-2.0.8_python-2_nocuda_tensorflow-1.3.0_theano-0.9.0.def ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/bootstrap.def


    #Information about version of singularity used
    echo "Generated/bootstrapped by Singularity.  Version $SINGULARITY_version" > ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/singularity-version.txt
    echo "Libexec=$SINGULARITY_libexecdir" >> ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/singularity-version.txt
    chown root:root ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/singularity-version.txt
    chmod 644 ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/singularity-version.txt


    #Image description
    echo "Image: keras-2.0.8_python-2_nocuda_tensorflow-1.3.0_theano-0.9.0" > ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/image-desc.txt
    cat - <<EOF >> ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/image-desc.txt
    Keras version 2.0.8 (TensorFlow=1.3.0, Theano=0.9.0, CNTK=none, Python 2.x, w/out cuda)
    
    Keras: Version 2.0.8 (no cuda)
    Built for container
    OS: Ubuntu xenial
    Python: Major version 2
    with
    Tensorflow: 1.3.0
    Theano: 0.9.0
    CNTK: none

EOF
    chown root:root ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/image-desc.txt
    chmod 644 ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/image-desc.txt


    #OS the container image based on
    echo "OS: Ubuntu 16.04 (xenial)" > ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/os-desc.txt

    cat - <<EOF >> ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/os-desc.txt
    Ubuntu 16.04 (xenial)
EOF
    chown root:root ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/os-desc.txt
    chmod 644 ${SINGULARITY_ROOTFS}/etc/glue/singularity-image-info/os-desc.txt


    #-------	From debootstrap_image

    #--- Add additional repositories

    #Add repo universe
    echo "deb http://us.archive.ubuntu.com/ubuntu xenial universe" > ${SINGULARITY_ROOTFS}/etc/apt/sources.list.d/universe.list
    chown root:root ${SINGULARITY_ROOTFS}/etc/apt/sources.list.d/universe.list
    chmod 444 ${SINGULARITY_ROOTFS}/etc/apt/sources.list.d/universe.list



%files
/cell_root/project/glue/k/keras/bootstrap/definitions/keras-2.0.8_python-2_nocuda_tensorflow-1.3.0_theano-0.9.0.def /etc/glue/singularity-image-info/bootstrap.def



%labels
edu.umd.hpcc.ImageLongDescription.1 Keras: Version 2.0.8 (no cuda)
edu.umd.hpcc.ImageLongDescription.2 Built for container
edu.umd.hpcc.ImageLongDescription.3 OS: Ubuntu xenial
edu.umd.hpcc.ImageLongDescription.4 Python: Major version 2
edu.umd.hpcc.ImageLongDescription.5 with
edu.umd.hpcc.ImageLongDescription.6 Tensorflow: 1.3.0
edu.umd.hpcc.ImageLongDescription.7 Theano: 0.9.0
edu.umd.hpcc.ImageLongDescription.8 CNTK: none
edu.umd.hpcc.ImageName keras-2.0.8_python-2_nocuda_tensorflow-1.3.0_theano-0.9.0
edu.umd.hpcc.ImageDescription Keras version 2.0.8 (TensorFlow=1.3.0, Theano=0.9.0, CNTK=none, Python 2.x, w/out cuda)
edu.umd.hpcc.OsName Ubuntu 16.04 (xenial)
edu.umd.hpcc.OsDescription.0 Ubuntu 16.04 (xenial)



%environment

    GLUE="yes"

    export GLUE


%post
    #This runs from within container at end of bootstrap, after %setup

    #--------	From bstrap_def_common
    #--- Create mount points we might need
    # mkdirhier /homes 
    if [ ! -d /homes ]; then
	mkdir /homes
	chown root:root /homes
	chmod 755 /homes
    fi

    # mkdirhier /export 
    if [ ! -d /export ]; then
	mkdir /export
	chown root:root /export
	chmod 755 /export
    fi

    # mkdirhier /afs/glue.umd.edu 
    if [ ! -d /afs ]; then
	mkdir /afs
	chown root:root /afs
	chmod 755 /afs
    fi
    if [ ! -d /afs/glue.umd.edu ]; then
	mkdir /afs/glue.umd.edu
	chown root:root /afs/glue.umd.edu
	chmod 755 /afs/glue.umd.edu
    fi

    # mkdirhier /lustre 
    if [ ! -d /lustre ]; then
	mkdir /lustre
	chown root:root /lustre
	chmod 755 /lustre
    fi




    #-------	From debootstrap_image

    #--- Run apt-get update to update our package list
    /usr/bin/apt-get update

    #--- Add additional .deb packages

    #Add packages for set "HDF5"
    apt-get install -y --no-install-recommends hdf5-tools libhdf5-dev

    #Add packages for set "NetCDF"
    apt-get install -y --no-install-recommends netcdf-bin libnetcdf-dev

    #Add packages for set "GRIB"
    apt-get install -y --no-install-recommends libgrib-api-dev

    #Add packages for set "Packages for python 2"
    apt-get install -y --no-install-recommends python python-dev python-setuptools python-pip build-essential curl git libcurl3-dev libfreetype6-dev libpng12-dev libzmq3-dev pkg-config rsync software-properties-common unzip zip zlib1g-dev

    apt-get clean


    #Install some python packages

    #Adding python packages for set "Standard pip packages"
    /usr/bin/pip install --no-cache-dir --upgrade numpy scipy matplotlib

    #Adding python packages for set "Standard util packages for keras"
    /usr/bin/pip install --no-cache-dir --upgrade future sklearn

    #Adding python packages for set "Tensorflow pip pkg"
    /usr/bin/pip install --no-cache-dir --upgrade tensorflow==1.3.0

    #Adding python packages for set "Theano pip pkgs"
    /usr/bin/pip install --no-cache-dir --upgrade theano

    #Adding python packages for set "Actual Keras package"
    /usr/bin/pip install --no-cache-dir --upgrade keras==2.0.8



%test
    # Sanity checks that the container is operating properly

    #--------	From bstrap_def_common
    #--- Ensure we have /bin/sh
    /usr/bin/test -f /bin/sh


    #--- keras_generic
    #Try importing keras in our python
     /usr/bin/python -c "import keras"








